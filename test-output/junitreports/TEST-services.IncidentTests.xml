<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Giron" failures="2" tests="2" name="services.IncidentTests" time="1.559" errors="0" timestamp="2023-02-23T18:39:34 PST" skipped="0">
  <testcase classname="services.IncidentTests" name="getIncidents1" time="0.325">
    <failure message="2 expectations failed.
Response body doesn&#039;t match expectation.
Expected: a string containing &quot;number&quot;
  Actual: &lt;html&gt;
    &lt;head&gt;
        &lt;meta HTTP-EQUIV=&quot;refresh&quot; content=&quot;5;https://developer.servicenow.com/dev.do#!/home?wu=true&quot;&gt;
        &lt;title&gt;
            Instance Hibernating page
        &lt;/title&gt;
        &lt;style&gt;
            @font-face {
                font-family: &quot;Gilroy-Bold&quot;;
                font-style: normal;
                 font-weight: normal;
                src: url(&quot;gilroy-bold-webfont.woff2&quot;) format(&quot;woff2&quot;),
                     url(&quot;gilroy-bold-webfont.woff&quot;) format(&quot;woff&quot;);
            }
            @font-face {
                font-family: &quot;Gilroy-Regular&quot;;
                font-style: normal;
                font-weight: normal;
                src: url(&quot;gilroy-regular-webfont.woff2&quot;) format(&quot;woff2&quot;),
                     url(&quot;gilroy-regular-webfont.woff&quot;) format(&quot;woff&quot;);
            }
            @font-face {
                font-family: &#039;Gilroy-Medium&#039;;
                font-style: normal;
                font-weight: normal;
                src: url(&#039;gilroy-medium-webfont.woff2&#039;) format(&#039;woff2&#039;),
                     url(&#039;gilroy-medium-webfont.woff&#039;) format(&#039;woff&#039;);
            }
            @font-face {
                font-family: &#039;SourceSansPro-Regular&#039;;
                src: url(&quot;source-sans-pro-v11-latin-regular.woff2&quot;) format(&quot;woff2&quot;),
                     url(&quot;source-sans-pro-v11-latin-regular.woff&quot;) format(&quot;woff&quot;);
            }
            body {
                background-color: #293D40;
            }
            h1 {
                margin: 150px 0 90px 0;
                color: rgb(255, 255, 255);
                font-family: Gilroy-Bold;
                font-size: 38px;
                font-weight: bold;
                height: 42px;
                letter-spacing: 0;
                line-height: 42px;
                width: 520px;
            }
            a {
                color: rgb(255, 255, 255);
                text-decoration: none;
            }
            button {
                padding: 9px 0 27px 0;
                background: rgb(255, 255, 255);
                margin-left: 26%;
                cursor: pointer;
            }
            .instance-hibernating-page {
                max-width: 600px;
                margin: auto;
                padding: 10px;
            }
            .resting-image {
                height: fit-content;
                position: relative;
            }
            .information {
                margin: 30px 0 0 -80px;
                color: rgb(255, 255, 255);
                font-family: Gilroy-Regular;
                font-size: 21px;
                font-weight: normal;
                height: 64px;
                letter-spacing: 0;
                line-height: 32px;
                text-align: center;
                width: 665px;
            }
            .external-link {
                text-decoration: underline;
            }
            .button-text {
                color: rgb(71, 77, 82);
                font-family: Gilroy-Medium;
                font-size: 15px;
                height: 17px;
                letter-spacing: 0;
                width: 172px;
            }
            .button-arrow {
                padding-left: 2px;
            }
            .redirection-text {
                margin: 64px 0 0 8%;
                color: rgb(255, 255, 255);
                font-family: SourceSansPro-Regular;
                font-size: 13px;
                font-weight: normal;
                height: 20px;
                letter-spacing: 0;
                line-height: 20px;
                width: 410px;
            }
            .texture-image {
                margin: 0 60px 0 1133px;
                position: absolute;
                width: 240px;
                top: 0;
                right: 0;
            }
        &lt;/style&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div class=&quot;instance-hibernating-page&quot;&gt;
            &lt;h1&gt;Your instance is hibernating&lt;/h1&gt;
            &lt;img class=&quot;resting-image&quot; src=&quot;https://sndevstore.blob.core.windows.net/images/Hibernating-page_Resting-Image-Asset.svg&quot; alt=&quot;texture_image&quot; width=&quot;500&quot; height=&quot;300&quot;&gt;
            &lt;p class=&quot;information&quot;&gt;Sign in to the site to wake your instance&lt;/p&gt;
            &lt;button onclick=&quot;location.href=&#039;https://developer.servicenow.com/dev.do#!/home?wu=true&#039;;&quot; class =&quot;button-text&quot;&gt;Sign in
                &lt;span class=&quot;button-arrow&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; viewBox=&quot;0 0 12 12&quot; style=&quot;width: 0.75rem; height: 0.75rem;&quot;&gt;
                        &lt;g stroke=&quot;none&quot; fill=&quot;none&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M9.11 6L5.815 2.704l.707-.708L11 6.475l-4.479 4.479-.707-.708L9.061 7H1.003V6z&quot;&gt;&lt;/path&gt;&lt;/g&gt;
                    &lt;/svg&gt;
                &lt;/span&gt;
            &lt;/button&gt;
            &lt;p class=&quot;information&quot;&gt;
                Want to find out why instances hibernate? Read more about instances in the
                &lt;a href=&quot;https://developer.servicenow.com/dev.do#!/guides/latest/developer-program/pdi-guide/personal-developer-instance-guide-introduction&quot; target=&quot;_blank&quot;&gt;
                    &lt;span class=&quot;external-link&quot;&gt;
                        Personal Developer Instance Guide
                    &lt;/span&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; viewBox=&quot;0 0 16 16&quot; style=&quot;width: 1rem; height: 1rem;&quot;&gt;
                        &lt;g stroke=&quot;none&quot; fill=&quot;none&quot;&gt;
                            &lt;path fill=&quot;currentColor&quot; d=&quot;M5 3v1h6.293l-8.651 8.648.707.707L12 4.707v6.294h1V3z&quot;&gt;
                            &lt;/path&gt;
                        &lt;/g&gt;
                    &lt;/svg&gt;
                &lt;/a&gt;
            &lt;/p&gt;
            &lt;p class=&quot;redirection-text&quot;&gt;You&#039;ll be automatically redirected to the ServiceNow Developer Site shortly&lt;/p&gt;
            &lt;img class=&quot;texture-image&quot; src=&quot;https://sndevstore.blob.core.windows.net/images/Hibernating-page_Texture-image-asset.png&quot; alt=&quot;circles&quot;&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;


Response body doesn&#039;t match expectation.
Expected: a string containing &quot;sys_id&quot;
  Actual: &lt;html&gt;
    &lt;head&gt;
        &lt;meta HTTP-EQUIV=&quot;refresh&quot; content=&quot;5;https://developer.servicenow.com/dev.do#!/home?wu=true&quot;&gt;
        &lt;title&gt;
            Instance Hibernating page
        &lt;/title&gt;
        &lt;style&gt;
            @font-face {
                font-family: &quot;Gilroy-Bold&quot;;
                font-style: normal;
                 font-weight: normal;
                src: url(&quot;gilroy-bold-webfont.woff2&quot;) format(&quot;woff2&quot;),
                     url(&quot;gilroy-bold-webfont.woff&quot;) format(&quot;woff&quot;);
            }
            @font-face {
                font-family: &quot;Gilroy-Regular&quot;;
                font-style: normal;
                font-weight: normal;
                src: url(&quot;gilroy-regular-webfont.woff2&quot;) format(&quot;woff2&quot;),
                     url(&quot;gilroy-regular-webfont.woff&quot;) format(&quot;woff&quot;);
            }
            @font-face {
                font-family: &#039;Gilroy-Medium&#039;;
                font-style: normal;
                font-weight: normal;
                src: url(&#039;gilroy-medium-webfont.woff2&#039;) format(&#039;woff2&#039;),
                     url(&#039;gilroy-medium-webfont.woff&#039;) format(&#039;woff&#039;);
            }
            @font-face {
                font-family: &#039;SourceSansPro-Regular&#039;;
                src: url(&quot;source-sans-pro-v11-latin-regular.woff2&quot;) format(&quot;woff2&quot;),
                     url(&quot;source-sans-pro-v11-latin-regular.woff&quot;) format(&quot;woff&quot;);
            }
            body {
                background-color: #293D40;
            }
            h1 {
                margin: 150px 0 90px 0;
                color: rgb(255, 255, 255);
                font-family: Gilroy-Bold;
                font-size: 38px;
                font-weight: bold;
                height: 42px;
                letter-spacing: 0;
                line-height: 42px;
                width: 520px;
            }
            a {
                color: rgb(255, 255, 255);
                text-decoration: none;
            }
            button {
                padding: 9px 0 27px 0;
                background: rgb(255, 255, 255);
                margin-left: 26%;
                cursor: pointer;
            }
            .instance-hibernating-page {
                max-width: 600px;
                margin: auto;
                padding: 10px;
            }
            .resting-image {
                height: fit-content;
                position: relative;
            }
            .information {
                margin: 30px 0 0 -80px;
                color: rgb(255, 255, 255);
                font-family: Gilroy-Regular;
                font-size: 21px;
                font-weight: normal;
                height: 64px;
                letter-spacing: 0;
                line-height: 32px;
                text-align: center;
                width: 665px;
            }
            .external-link {
                text-decoration: underline;
            }
            .button-text {
                color: rgb(71, 77, 82);
                font-family: Gilroy-Medium;
                font-size: 15px;
                height: 17px;
                letter-spacing: 0;
                width: 172px;
            }
            .button-arrow {
                padding-left: 2px;
            }
            .redirection-text {
                margin: 64px 0 0 8%;
                color: rgb(255, 255, 255);
                font-family: SourceSansPro-Regular;
                font-size: 13px;
                font-weight: normal;
                height: 20px;
                letter-spacing: 0;
                line-height: 20px;
                width: 410px;
            }
            .texture-image {
                margin: 0 60px 0 1133px;
                position: absolute;
                width: 240px;
                top: 0;
                right: 0;
            }
        &lt;/style&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div class=&quot;instance-hibernating-page&quot;&gt;
            &lt;h1&gt;Your instance is hibernating&lt;/h1&gt;
            &lt;img class=&quot;resting-image&quot; src=&quot;https://sndevstore.blob.core.windows.net/images/Hibernating-page_Resting-Image-Asset.svg&quot; alt=&quot;texture_image&quot; width=&quot;500&quot; height=&quot;300&quot;&gt;
            &lt;p class=&quot;information&quot;&gt;Sign in to the site to wake your instance&lt;/p&gt;
            &lt;button onclick=&quot;location.href=&#039;https://developer.servicenow.com/dev.do#!/home?wu=true&#039;;&quot; class =&quot;button-text&quot;&gt;Sign in
                &lt;span class=&quot;button-arrow&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; viewBox=&quot;0 0 12 12&quot; style=&quot;width: 0.75rem; height: 0.75rem;&quot;&gt;
                        &lt;g stroke=&quot;none&quot; fill=&quot;none&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M9.11 6L5.815 2.704l.707-.708L11 6.475l-4.479 4.479-.707-.708L9.061 7H1.003V6z&quot;&gt;&lt;/path&gt;&lt;/g&gt;
                    &lt;/svg&gt;
                &lt;/span&gt;
            &lt;/button&gt;
            &lt;p class=&quot;information&quot;&gt;
                Want to find out why instances hibernate? Read more about instances in the
                &lt;a href=&quot;https://developer.servicenow.com/dev.do#!/guides/latest/developer-program/pdi-guide/personal-developer-instance-guide-introduction&quot; target=&quot;_blank&quot;&gt;
                    &lt;span class=&quot;external-link&quot;&gt;
                        Personal Developer Instance Guide
                    &lt;/span&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; viewBox=&quot;0 0 16 16&quot; style=&quot;width: 1rem; height: 1rem;&quot;&gt;
                        &lt;g stroke=&quot;none&quot; fill=&quot;none&quot;&gt;
                            &lt;path fill=&quot;currentColor&quot; d=&quot;M5 3v1h6.293l-8.651 8.648.707.707L12 4.707v6.294h1V3z&quot;&gt;
                            &lt;/path&gt;
                        &lt;/g&gt;
                    &lt;/svg&gt;
                &lt;/a&gt;
            &lt;/p&gt;
            &lt;p class=&quot;redirection-text&quot;&gt;You&#039;ll be automatically redirected to the ServiceNow Developer Site shortly&lt;/p&gt;
            &lt;img class=&quot;texture-image&quot; src=&quot;https://sndevstore.blob.core.windows.net/images/Hibernating-page_Texture-image-asset.png&quot; alt=&quot;circles&quot;&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;

" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: 2 expectations failed.
Response body doesn't match expectation.
Expected: a string containing "number"
  Actual: <html>
    <head>
        <meta HTTP-EQUIV="refresh" content="5;https://developer.servicenow.com/dev.do#!/home?wu=true">
        <title>
            Instance Hibernating page
        </title>
        <style>
            @font-face {
                font-family: "Gilroy-Bold";
                font-style: normal;
                 font-weight: normal;
                src: url("gilroy-bold-webfont.woff2") format("woff2"),
                     url("gilroy-bold-webfont.woff") format("woff");
            }
            @font-face {
                font-family: "Gilroy-Regular";
                font-style: normal;
                font-weight: normal;
                src: url("gilroy-regular-webfont.woff2") format("woff2"),
                     url("gilroy-regular-webfont.woff") format("woff");
            }
            @font-face {
                font-family: 'Gilroy-Medium';
                font-style: normal;
                font-weight: normal;
                src: url('gilroy-medium-webfont.woff2') format('woff2'),
                     url('gilroy-medium-webfont.woff') format('woff');
            }
            @font-face {
                font-family: 'SourceSansPro-Regular';
                src: url("source-sans-pro-v11-latin-regular.woff2") format("woff2"),
                     url("source-sans-pro-v11-latin-regular.woff") format("woff");
            }
            body {
                background-color: #293D40;
            }
            h1 {
                margin: 150px 0 90px 0;
                color: rgb(255, 255, 255);
                font-family: Gilroy-Bold;
                font-size: 38px;
                font-weight: bold;
                height: 42px;
                letter-spacing: 0;
                line-height: 42px;
                width: 520px;
            }
            a {
                color: rgb(255, 255, 255);
                text-decoration: none;
            }
            button {
                padding: 9px 0 27px 0;
                background: rgb(255, 255, 255);
                margin-left: 26%;
                cursor: pointer;
            }
            .instance-hibernating-page {
                max-width: 600px;
                margin: auto;
                padding: 10px;
            }
            .resting-image {
                height: fit-content;
                position: relative;
            }
            .information {
                margin: 30px 0 0 -80px;
                color: rgb(255, 255, 255);
                font-family: Gilroy-Regular;
                font-size: 21px;
                font-weight: normal;
                height: 64px;
                letter-spacing: 0;
                line-height: 32px;
                text-align: center;
                width: 665px;
            }
            .external-link {
                text-decoration: underline;
            }
            .button-text {
                color: rgb(71, 77, 82);
                font-family: Gilroy-Medium;
                font-size: 15px;
                height: 17px;
                letter-spacing: 0;
                width: 172px;
            }
            .button-arrow {
                padding-left: 2px;
            }
            .redirection-text {
                margin: 64px 0 0 8%;
                color: rgb(255, 255, 255);
                font-family: SourceSansPro-Regular;
                font-size: 13px;
                font-weight: normal;
                height: 20px;
                letter-spacing: 0;
                line-height: 20px;
                width: 410px;
            }
            .texture-image {
                margin: 0 60px 0 1133px;
                position: absolute;
                width: 240px;
                top: 0;
                right: 0;
            }
        </style>
    </head>
    <body>
        <div class="instance-hibernating-page">
            <h1>Your instance is hibernating</h1>
            <img class="resting-image" src="https://sndevstore.blob.core.windows.net/images/Hibernating-page_Resting-Image-Asset.svg" alt="texture_image" width="500" height="300">
            <p class="information">Sign in to the site to wake your instance</p>
            <button onclick="location.href='https://developer.servicenow.com/dev.do#!/home?wu=true';" class ="button-text">Sign in
                <span class="button-arrow">
                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 12 12" style="width: 0.75rem; height: 0.75rem;">
                        <g stroke="none" fill="none"><path fill="currentColor" d="M9.11 6L5.815 2.704l.707-.708L11 6.475l-4.479 4.479-.707-.708L9.061 7H1.003V6z"></path></g>
                    </svg>
                </span>
            </button>
            <p class="information">
                Want to find out why instances hibernate? Read more about instances in the
                <a href="https://developer.servicenow.com/dev.do#!/guides/latest/developer-program/pdi-guide/personal-developer-instance-guide-introduction" target="_blank">
                    <span class="external-link">
                        Personal Developer Instance Guide
                    </span>
                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 16 16" style="width: 1rem; height: 1rem;">
                        <g stroke="none" fill="none">
                            <path fill="currentColor" d="M5 3v1h6.293l-8.651 8.648.707.707L12 4.707v6.294h1V3z">
                            </path>
                        </g>
                    </svg>
                </a>
            </p>
            <p class="redirection-text">You'll be automatically redirected to the ServiceNow Developer Site shortly</p>
            <img class="texture-image" src="https://sndevstore.blob.core.windows.net/images/Hibernating-page_Texture-image-asset.png" alt="circles">
        </div>
    </body>
</html>


Response body doesn't match expectation.
Expected: a string containing "sys_id"
  Actual: <html>
    <head>
        <meta HTTP-EQUIV="refresh" content="5;https://developer.servicenow.com/dev.do#!/home?wu=true">
        <title>
            Instance Hibernating page
        </title>
        <style>
            @font-face {
                font-family: "Gilroy-Bold";
                font-style: normal;
                 font-weight: normal;
                src: url("gilroy-bold-webfont.woff2") format("woff2"),
                     url("gilroy-bold-webfont.woff") format("woff");
            }
            @font-face {
                font-family: "Gilroy-Regular";
                font-style: normal;
                font-weight: normal;
                src: url("gilroy-regular-webfont.woff2") format("woff2"),
                     url("gilroy-regular-webfont.woff") format("woff");
            }
            @font-face {
                font-family: 'Gilroy-Medium';
                font-style: normal;
                font-weight: normal;
                src: url('gilroy-medium-webfont.woff2') format('woff2'),
                     url('gilroy-medium-webfont.woff') format('woff');
            }
            @font-face {
                font-family: 'SourceSansPro-Regular';
                src: url("source-sans-pro-v11-latin-regular.woff2") format("woff2"),
                     url("source-sans-pro-v11-latin-regular.woff") format("woff");
            }
            body {
                background-color: #293D40;
            }
            h1 {
                margin: 150px 0 90px 0;
                color: rgb(255, 255, 255);
                font-family: Gilroy-Bold;
                font-size: 38px;
                font-weight: bold;
                height: 42px;
                letter-spacing: 0;
                line-height: 42px;
                width: 520px;
            }
            a {
                color: rgb(255, 255, 255);
                text-decoration: none;
            }
            button {
                padding: 9px 0 27px 0;
                background: rgb(255, 255, 255);
                margin-left: 26%;
                cursor: pointer;
            }
            .instance-hibernating-page {
                max-width: 600px;
                margin: auto;
                padding: 10px;
            }
            .resting-image {
                height: fit-content;
                position: relative;
            }
            .information {
                margin: 30px 0 0 -80px;
                color: rgb(255, 255, 255);
                font-family: Gilroy-Regular;
                font-size: 21px;
                font-weight: normal;
                height: 64px;
                letter-spacing: 0;
                line-height: 32px;
                text-align: center;
                width: 665px;
            }
            .external-link {
                text-decoration: underline;
            }
            .button-text {
                color: rgb(71, 77, 82);
                font-family: Gilroy-Medium;
                font-size: 15px;
                height: 17px;
                letter-spacing: 0;
                width: 172px;
            }
            .button-arrow {
                padding-left: 2px;
            }
            .redirection-text {
                margin: 64px 0 0 8%;
                color: rgb(255, 255, 255);
                font-family: SourceSansPro-Regular;
                font-size: 13px;
                font-weight: normal;
                height: 20px;
                letter-spacing: 0;
                line-height: 20px;
                width: 410px;
            }
            .texture-image {
                margin: 0 60px 0 1133px;
                position: absolute;
                width: 240px;
                top: 0;
                right: 0;
            }
        </style>
    </head>
    <body>
        <div class="instance-hibernating-page">
            <h1>Your instance is hibernating</h1>
            <img class="resting-image" src="https://sndevstore.blob.core.windows.net/images/Hibernating-page_Resting-Image-Asset.svg" alt="texture_image" width="500" height="300">
            <p class="information">Sign in to the site to wake your instance</p>
            <button onclick="location.href='https://developer.servicenow.com/dev.do#!/home?wu=true';" class ="button-text">Sign in
                <span class="button-arrow">
                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 12 12" style="width: 0.75rem; height: 0.75rem;">
                        <g stroke="none" fill="none"><path fill="currentColor" d="M9.11 6L5.815 2.704l.707-.708L11 6.475l-4.479 4.479-.707-.708L9.061 7H1.003V6z"></path></g>
                    </svg>
                </span>
            </button>
            <p class="information">
                Want to find out why instances hibernate? Read more about instances in the
                <a href="https://developer.servicenow.com/dev.do#!/guides/latest/developer-program/pdi-guide/personal-developer-instance-guide-introduction" target="_blank">
                    <span class="external-link">
                        Personal Developer Instance Guide
                    </span>
                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 16 16" style="width: 1rem; height: 1rem;">
                        <g stroke="none" fill="none">
                            <path fill="currentColor" d="M5 3v1h6.293l-8.651 8.648.707.707L12 4.707v6.294h1V3z">
                            </path>
                        </g>
                    </svg>
                </a>
            </p>
            <p class="redirection-text">You'll be automatically redirected to the ServiceNow Developer Site shortly</p>
            <img class="texture-image" src="https://sndevstore.blob.core.windows.net/images/Hibernating-page_Texture-image-asset.png" alt="circles">
        </div>
    </body>
</html>


at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at services.IncidentTests.getIncidents1(IncidentTests.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- getIncidents1 -->
  <system-out/>
  <testcase classname="services.IncidentTests" name="CreateIncidents1" time="1.234">
    <failure message="1 expectation failed.
Expected status code &lt;201&gt; but was &lt;200&gt;.
" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at services.IncidentTests.CreateIncidents1(IncidentTests.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- CreateIncidents1 -->
  <system-out/>
</testsuite> <!-- services.IncidentTests -->
